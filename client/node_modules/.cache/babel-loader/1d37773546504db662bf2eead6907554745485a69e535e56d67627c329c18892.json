{"ast":null,"code":"var _jsxFileName = \"/home/shlok/Desktop/Stuff/blog/client/blog/src/pages/LoginPage.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  async function login(ev) {\n    ev.preventDefault();\n    const response = await fetch('http://localhost:4000/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include'\n    });\n    if (response.ok) {\n      response.json().then(userInfo => {\n        setUserInfo(userInfo);\n        setRedirect(true);\n      });\n    } else {\n      alert('wrong credentials');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"login\",\n    onSubmit: login,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"username\",\n      value: username,\n      onChange: ev => setUsername(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"password\",\n      value: password,\n      onChange: ev => setPassword(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginPage, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useContext","useState","Navigate","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","password","setPassword","login","ev","preventDefault","response","fetch","method","body","JSON","stringify","headers","credentials","ok","json","then","userInfo","setUserInfo","setRedirect","alert","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/shlok/Desktop/Stuff/blog/client/blog/src/pages/LoginPage.js"],"sourcesContent":["import { useContext, useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\n\n\nexport default function LoginPage() {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    async function login(ev) {\n        ev.preventDefault();\n        const response = await fetch('http://localhost:4000/login', {\n            method: 'POST',\n            body: JSON.stringify({ username, password }),\n            headers: { 'Content-Type': 'application/json' },\n            credentials: 'include',\n        });\n        if (response.ok) {\n            response.json().then(userInfo => {\n                setUserInfo(userInfo);\n                setRedirect(true);\n            });\n        } else {\n            alert('wrong credentials');\n        }\n    }\n\n    return (\n        <form className=\"login\" onSubmit={login}>\n            <h1>Login</h1>\n            <input type=\"text\"\n                placeholder=\"username\"\n                value={username}\n                onChange={ev => setUsername(ev.target.value)} />\n            <input type=\"password\"\n                placeholder=\"password\"\n                value={password}\n                onChange={ev => setPassword(ev.target.value)} />\n            <button>Login</button>\n        </form>\n    );\n}"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,eAAeU,KAAKA,CAACC,EAAE,EAAE;IACrBA,EAAE,CAACC,cAAc,CAAC,CAAC;IACnB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MACxDC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEZ,QAAQ;QAAEE;MAAS,CAAC,CAAC;MAC5CW,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,WAAW,EAAE;IACjB,CAAC,CAAC;IACF,IAAIP,QAAQ,CAACQ,EAAE,EAAE;MACbR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAI;QAC7BC,WAAW,CAACD,QAAQ,CAAC;QACrBE,WAAW,CAAC,IAAI,CAAC;MACrB,CAAC,CAAC;IACN,CAAC,MAAM;MACHC,KAAK,CAAC,mBAAmB,CAAC;IAC9B;EACJ;EAEA,oBACIxB,OAAA;IAAMyB,SAAS,EAAC,OAAO;IAACC,QAAQ,EAAEnB,KAAM;IAAAoB,QAAA,gBACpC3B,OAAA;MAAA2B,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACd/B,OAAA;MAAOgC,IAAI,EAAC,MAAM;MACdC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAE/B,QAAS;MAChBgC,QAAQ,EAAE3B,EAAE,IAAIJ,WAAW,CAACI,EAAE,CAAC4B,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpD/B,OAAA;MAAOgC,IAAI,EAAC,UAAU;MAClBC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAE7B,QAAS;MAChB8B,QAAQ,EAAE3B,EAAE,IAAIF,WAAW,CAACE,EAAE,CAAC4B,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpD/B,OAAA;MAAA2B,QAAA,EAAQ;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEf;AAAC7B,EAAA,CApCuBD,SAAS;AAAAoC,EAAA,GAATpC,SAAS;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}