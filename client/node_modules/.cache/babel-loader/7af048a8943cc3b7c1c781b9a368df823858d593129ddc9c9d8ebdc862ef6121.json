{"ast":null,"code":"var _jsxFileName = \"/home/shlok/Desktop/Stuff/blog/client/blog/src/pages/RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterPage = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const register = async ev => {\n    ev.preventDefault();\n    try {\n      const response = await fetch('http://localhost:4000/register', {\n        method: 'POST',\n        body: JSON.stringify({\n          username,\n          password\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        console.log('Registration successful');\n      } else {\n        console.error('Registration failed');\n      }\n    } catch (error) {\n      console.error('An error occurred:', error);\n      // Handle network or other errors\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"register\",\n    onSubmit: register,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"username\",\n      value: username,\n      onChange: ev => setUsername(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"password\",\n      value: password,\n      onChange: ev => setPassword(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterPage, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RegisterPage","_s","username","setUsername","password","setPassword","register","ev","preventDefault","response","fetch","method","body","JSON","stringify","headers","ok","console","log","error","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/shlok/Desktop/Stuff/blog/client/blog/src/pages/RegisterPage.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst RegisterPage = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const register = async (ev) => {\n        ev.preventDefault();\n\n        try {\n            const response = await fetch('http://localhost:4000/register', {\n                method: 'POST',\n                body: JSON.stringify({ username, password }),\n                headers: { 'Content-Type': 'application/json' },\n            });\n\n            if (response.ok) {\n                console.log('Registration successful');\n            } else {\n                console.error('Registration failed');\n            }\n        } catch (error) {\n            console.error('An error occurred:', error);\n            // Handle network or other errors\n        }\n    };\n\n    return (\n        <form className='register' onSubmit={register}>\n            <h1>Register</h1>\n            <input\n                type=\"text\"\n                placeholder='username'\n                value={username}\n                onChange={(ev) => setUsername(ev.target.value)}\n            />\n            <input\n                type=\"password\"\n                placeholder='password'\n                value={password}\n                onChange={(ev) => setPassword(ev.target.value)}\n            />\n            <button type=\"submit\">Register</button>\n        </form>\n    );\n};\n\nexport default RegisterPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,QAAQ,GAAG,MAAOC,EAAE,IAAK;IAC3BA,EAAE,CAACC,cAAc,CAAC,CAAC;IAEnB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC3DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEZ,QAAQ;UAAEE;QAAS,CAAC,CAAC;QAC5CW,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB;MAClD,CAAC,CAAC;MAEF,IAAIN,QAAQ,CAACO,EAAE,EAAE;QACbC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MAC1C,CAAC,MAAM;QACHD,OAAO,CAACE,KAAK,CAAC,qBAAqB,CAAC;MACxC;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C;IACJ;EACJ,CAAC;;EAED,oBACIpB,OAAA;IAAMqB,SAAS,EAAC,UAAU;IAACC,QAAQ,EAAEf,QAAS;IAAAgB,QAAA,gBAC1CvB,OAAA;MAAAuB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjB3B,OAAA;MACI4B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAE3B,QAAS;MAChB4B,QAAQ,EAAGvB,EAAE,IAAKJ,WAAW,CAACI,EAAE,CAACwB,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACF3B,OAAA;MACI4B,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEzB,QAAS;MAChB0B,QAAQ,EAAGvB,EAAE,IAAKF,WAAW,CAACE,EAAE,CAACwB,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACF3B,OAAA;MAAQ4B,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEf,CAAC;AAACzB,EAAA,CA3CID,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AA6ClB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}